#summary List of transitions available
#labels Temp

= Transitions =

When creating new tweenings via [addTween] or [addCaller], you can specify the type of *transition* each tweening will do, via the `transition` [TweeningParameters tweening parameter]. This transition is a mathematical function, or an equation, that tells the engine which is the current value of a property transition, given the point in time the tweening is at. So, in a way, you can say this is the type of animation you want your tweening to perform.


== Transition parameters ==

While you can use [UsingCustomTransitions custom transition functions], a number of specific transitions are available by default and can be assigned by using their shortcut string names. They're pretty well known - used in all other public tweening extensions and classes - and based on [http://www.robertpenner.com/easing/ Robert Penner's easing equations]. Capitalization is not taken into account, so "easeInOutExpo" means the same as "easeinoutexpo". The complete list is as such:


=== Standard transitions ===

 * "linear": The _standard_ animation - starts on the current value and slowly progresses until it reaches the target value, with no easing, acceleration or deceleration whatsoever. Equivalent to `mx.transitions.easing.None.easeNone`.


=== Curve-based transitions ===

 * "easeInQuad": Quadratic easing in - starts at zero velocity then accelerates. Equivalent to `mx.transitions.easing.Regular.easeIn`.
 * "easeOutQuad": Quadratic easing out - starts at full velocity then decelerates to zero. Equivalent to `mx.transitions.easing.Regular.easeOut`.
 * "easeInOutQuad": Quadratic easing in and out - starts at zero velocity, accelerates until halfway, then decelerates to zero velocity again. Equivalent to `mx.transitions.easing.Regular.easeInOut`.
 * "easeOutInQuad": Quadratic easing out and in - starts at full velocity, decelerates to zero velocity until halfway, then accelerates.

 * "easeInCubic": ...
 * "easeOutCubic": ...
 * "easeInOutCubic": ...
 * "easeOutInCubic": ...

 * "easeInQuart": ...
 * "easeOutQuart": ...
 * "easeInOutQuart": ...
 * "easeOutInQuart": ...

 * "easeInQuint": ...
 * "easeOutQuint": ...
 * "easeInOutQuint": ...
 * "easeOutInQuint": ...

 * "easeInSine": ...
 * "easeOutSine": ...
 * "easeInOutSine": ...
 * "easeOutInSine": ...

 * "easeInExpo": ...
 * "easeOutExpo": ...
 * "easeInOutExpo": ...
 * "easeOutInExpo": ...

 * "easeInCirc": ...
 * "easeOutCirc": ...
 * "easeInOutCirc": ...
 * "easeOutInCirc": ...


=== Special transitions ===

 * "easeInElastic": ...
 * "easeOutElastic": ...
 * "easeInOutElastic": ...
 * "easeOutInElastic": ...

 * "easeInBack": ...
 * "easeOutBack": ...
 * "easeInOutBack": ...
 * "easeOutInBack": ...

 * "easeInBounce": ...
 * "easeOutBounce": ...
 * "easeInOutBounce": ...
 * "easeOutInBounce": ...


=== Tweener Transition Cheat Sheet ===

 * [http://natejc.com/blog/?p=43 Tweener Transition Cheat Sheet] [http://natejc.com/blog/wp-content/uploads/2007/05/tweenertransitioncheatsheet.pdf pdf] or [http://natejc.com/blog/wp-content/uploads/2007/05/tweenertransitioncheatsheet.gif gif]

== See also ==

[addTween], [addCaller], [UsingCustomTransitions Using custom transitions]

